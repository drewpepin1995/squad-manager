{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar/navbar.js","components/info/TeamSummary.js","components/info/Teams.js","components/dashboard/UpcomingGames.js","components/dashboard/Dashboard.js","store/actions/teamsActions.js","components/auth/InsertPlayer.js","components/auth/InsertGame.js","components/info/TeamDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/info/RegisterTeam.js","components/routes/SignedInRoute.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/teamReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","Component","state","console","log","firebase","links","uid","id","isLoaded","TeamSummary","team","name","managerFirstName","managerLastName","sport","Teams","teams","map","key","Results","Dashboard","this","UpcomingGames","compose","firestore","ordered","firestoreConnect","collection","doc","subcollections","storeAs","createTeam","getFirestore","managerId","add","firstName","lastName","createdAt","Date","catch","err","InsertPlayer","visible","playerFirstName","playerLastName","playerDues","showModal","setState","handleOk","e","handleCancel","handleChange","target","value","handleSubmit","preventDefault","insertPlayer","match","params","title","onOk","onCancel","onSubmit","Item","label","htmlFor","onChange","htmlType","withRouter","player","teamId","addedBy","addedAt","InsertGame","date","opponent","handleTextInputChange","insertGame","handleDateInputChange","valueOfInput","format","selected","showTime","placeholder","game","rosterColumns","dataIndex","scheduleColumns","rosterData","dues","scheduleData","time","ownProps","data","loading","status","requesting","columns","dataSource","SignIn","email","password","signIn","authError","Password","creds","credentials","signInWithEmailAndPassword","Option","Select","SignUp","managerPlayer","handleSelectInputChange","signUp","newUser","createUserWithEmailAndPassword","resp","user","set","RegisterTeam","history","push","component","rest","useHistory","render","App","exact","path","TeamDetails","Boolean","window","location","hostname","initState","authReducer","action","message","teamsReducer","rootReducer","combineReducers","teamReducer","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.157aa21b.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\n\nconst SignedInLinks = (props) => {\n        return (\n            <ul className='right'>\n                <li><NavLink to='/registerteam'>Register a Team</NavLink></li>\n                <li><a onClick={props.signOut}>Log Out</a></li>\n                <li><NavLink to='/' className=\"btn btn-floating orange darken-3\">{props.profile.initials}</NavLink></li>\n            </ul>\n        );\n    }\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' })\n\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err })\n        })\n    }\n\n}\n\nexport const signOut = () => {\n    return(dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({type: 'SIGNOUT_SUCCESS'})\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0],\n                managerPlayer: newUser.managerPlayer\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n\n\n\n}","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\n\n\nclass SignedOutLinks extends Component {\n    render() {\n        return (\n            <ul className='right'>\n                <li><NavLink to='/signup'>Register</NavLink></li>\n                <li><NavLink to='/signin'>Sign In</NavLink></li>\n            </ul>\n\n\n        );\n    }\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from '../SignedInLinks'\nimport SignedOutLinks from '../SignedOutLinks'\nimport { connect } from 'react-redux';\n\n\n\nconst Navbar = (props) => {\n  const { auth, profile } = props \n\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\n\n  return (\n    <nav id='nav' className=\"nav-wrapper\">\n      <div className=\"container\">\n        <Link to='/' className='brand-logo'>Squad Master</Link>\n        { auth.isLoaded && links }\n      </div>\n    </nav>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\n\n\nconst TeamSummary =({team}) => {\n\n        return (\n\n                <div className=\"card z-depth-0 project-summary\" id=\"card\">\n                    <div className='card-content grey-text text-darken-3'>\n                        <span className=\"card-title\">{team.name}</span>\n                        <p className=\"grey-test\">Team Manager : {team.managerFirstName}  {team.managerLastName}</p>\n                        <p className=\"grey-test\">Sport : {team.sport}</p>\n                    </div>\n                </div>\n            \n        );\n    }\nexport default TeamSummary;","import React from 'react';\nimport TeamSummary from './TeamSummary';\nimport { Link } from 'react-router-dom';\n\n\nconst Teams = ({ teams }) => {\n\n\n    return (\n        <div className=\"team-list section\">\n             {teams && teams.map(team => {\n                return (\n                    <Link to={'/team/' + team.id}>\n                    <TeamSummary team={team} key={team.id} />\n                    </Link>\n                    \n                )\n            })\n            }\n        </div>\n    );\n}\nexport default Teams;","import React from 'react';\n\n\n\n\nconst Results = () => {\n  return (\n      <div className=\"container\">\n      </div>\n    \n  );\n}\n\nexport default Results;","import React, { Component } from 'react';\nimport Teams from '../info/Teams'\nimport { connect } from 'react-redux';\nimport UpcomingGames from './UpcomingGames';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\n\n\nclass Dashboard extends Component {\n    render() {\n        const { teams, auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div className='dashboard container'>\n                <div className='row'>\n                    <div className=\"col s12 m6\">\n                        <h5 id='dashboardHeader'>My Teams</h5>\n                        <Teams teams={teams} />\n                    </div>\n                    <div className='col s12 m5 offset-m1'>\n                        <h5 id='dashboardHeader'>Upcoming Games</h5>\n                        <UpcomingGames />\n                    </div>\n                </div>\n            </div>\n\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        teams: state.firestore.ordered.teams,\n        auth: state.firebase.auth\n    }\n}\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect(props => {\n      return [\n        {\n          collection: \"users\",\n          doc: props.auth.uid, \n          subcollections: [{ collection: \"teams\" }],\n          storeAs: 'teams'\n        }\n      ];\n    })\n)(Dashboard);","export const createTeam = (team) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const managerId = getState().firebase.auth.uid;\n        firestore.collection('/users/' + managerId + '/teams/').add({\n            ...team,\n            managerFirstName: profile.firstName,\n            managerLastName: profile.lastName,\n            managerId: managerId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_TEAM', team })\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err })\n        })\n\n    }\n}\n\nexport const insertPlayer = (player, teamId) => {\n\n    const { playerFirstName, playerLastName, playerDues } = player\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore();\n        const managerId = getState().firebase.auth.uid;\n            firestore.collection('/users/' + managerId + '/teams/' + teamId + '/roster/').add({\n                playerFirstName, playerLastName, playerDues,\n                addedBy: managerId,\n                addedAt: new Date()\n            }).then(() => {\n                dispatch({ type: 'INSERT_PLAYER', player: {playerFirstName, playerLastName, playerDues} })\n            }).catch((err) => {\n                dispatch({ type: 'INSERT_PLAYER_ERROR', err })\n            })\n    }\n\n}\n\nexport const insertGame = (game, teamId) => {\n\n    const { date, opponent } = game\n\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore();\n        const managerId = getState().firebase.auth.uid;\n            firestore.collection('/users/' + managerId + '/teams/' + teamId + '/schedule/').add({\n                date, opponent,\n                addedBy: managerId,\n                addedAt: new Date()\n            }).then(() => {\n                dispatch({ type: 'INSERT_GAME', game: {date, opponent} })\n            }).catch((err) => {\n                dispatch({ type: 'INSERT_GAME_ERROR', err })\n            })\n    }\n\n}\n\n\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport { Modal, Button, Form, Input } from 'antd';\nimport { insertPlayer } from '../../store/actions/teamsActions';\nimport { connect } from 'react-redux';\nimport { compose } from '../../../../../../Library/Caches/typescript/3.6/node_modules/redux';\nclass InsertPlayer extends Component {\n\n\n    state = {\n        visible: false,\n        playerFirstName: '',\n        playerLastName: '',\n        playerDues: ''\n    };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.insertPlayer(\n            this.state, this.props.match.params.id\n                \n                \n            \n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <Button type=\"primary\" onClick={this.showModal}>\n                    Add a Player\n        </Button>\n                <Modal\n                    title=\"Add a Player\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <Form id='form' onSubmit={this.handleSubmit}>\n                        <h5 className='grey-text text-darken-3'>Player Details</h5>\n                        <Form.Item label=\"Player First Name\" htmlFor='Player First Name'>\n                            <Input id='playerFirstName' onChange={this.handleChange} />\n                        </Form.Item>\n                        <Form.Item label=\"Player Last Name\" htmlFor='Player Last Name'>\n                            <Input id='playerLastName' onChange={this.handleChange} />\n                        </Form.Item>\n                        <Form.Item label=\"Player Dues\" htmlFor='Player Dues'>\n                            <Input id='playerDues' onChange={this.handleChange} />\n                        </Form.Item>\n                        <Form.Item >\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Add Player\n          </Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        insertPlayer: (player, teamId) => dispatch(insertPlayer(player, teamId))\n    }\n}\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps))(InsertPlayer);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport { Modal, Button, Form, Input } from 'antd';\nimport { DatePicker } from 'antd';\nimport { insertGame } from '../../store/actions/teamsActions';\nimport { connect } from 'react-redux';\nimport { compose } from '../../../../../../Library/Caches/typescript/3.6/node_modules/redux';\nconst dateFormat = 'YYYY/MM/DD HH:mm';\n\n\nfunction onOk(value) {\n  console.log('onOk: ', value);\n}\n\nclass InsertGame extends Component {\n  state = { \n    visible: false,\n    date: '',\n    opponent: ''\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = e => {\n    console.log(e);\n    this.setState({\n      visible: false,\n    });\n  };\n\n  handleCancel = e => {\n    console.log(e);\n    this.setState({\n      visible: false,\n    });\n  };\n\n  handleTextInputChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n        this.props.insertGame(\n            this.state, this.props.match.params.id\n                \n                \n            \n        )\n  }\n\n  handleDateInputChange = (date) => {\n    const valueOfInput = date.format();\n    this.setState({\n      date: valueOfInput\n\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Button type=\"primary\" onClick={this.showModal}>\n          Add a Game\n        </Button>\n        <Modal\n          title=\"Add a Game\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n        >\n          <Form id='form' onSubmit={this.handleSubmit}>\n            <DatePicker id='date' format={dateFormat} selected={this.state.date} showTime={{ format: 'HH:mm' }} placeholder=\"Select Time\" onChange={this.handleDateInputChange} onOk={onOk} />\n            <Form.Item label=\"Opponent\" htmlFor='Opponent'>\n              <Input id='opponent' onChange={this.handleTextInputChange} />\n            </Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Add Game\n          </Button>\n          </Form>\n        </Modal>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      insertGame: (game, teamId) => dispatch(insertGame(game, teamId))\n  }\n}\nexport default compose(\n  withRouter, \n  connect(mapStateToProps, mapDispatchToProps))(InsertGame);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { Spin } from 'antd';\nimport { Table } from 'antd';\nimport InsertPlayer from '../../components/auth/InsertPlayer';\nimport InsertGame from '../../components/auth/InsertGame';\n\nconst rosterColumns = [\n    {\n        title: 'Name',\n        dataIndex: 'name'\n\n    },\n    {\n        title: 'Dues',\n        dataIndex: 'dues'\n    }\n];\nconst scheduleColumns = [\n    {\n        title: 'Date',\n        dataIndex: 'date'\n\n    },\n    {\n        title: 'Time',\n        dataIndex: 'time'\n\n    },\n    {\n        title: 'Opponent',\n        dataIndex: 'opponent'\n    }\n];\n\nconst rosterData = [\n    {\n        dues: '',\n        name: '',\n    }\n];\n\nconst scheduleData = [\n    {\n        date: '',\n        time: '',\n        opponent: ''\n    }\n];\n\n\nconst TeamDetails = (props) => {\n    console.log(props)\n    const { team, loading } = props;\n    if (loading || !team) {\n        return <Spin />\n    }\n\n    return (\n        <div className='container section game-details'>\n            <div className='card z-depth-0'>\n                <div className='card-content'>\n                    <span className='card-title center'>{team.name}</span>\n                    <p className=\"center\">Manager : {team.managerFirstName}  {team.managerLastName}</p>\n                </div>\n                <div className=\"card-action grey-lighten-4 grey-text\">\n                </div>\n            </div>\n            <div className='row'>\n                    <div className=\"col s12 m5\">\n                        <h5 className='center'>Roster</h5>\n                        <Table columns={rosterColumns} dataSource={rosterData} />\n                        <InsertPlayer />\n                    </div>\n                    <div className='col s12 m7'>\n                        <h5 className='center'>Schedule</h5>\n                        <Table columns={scheduleColumns} dataSource={scheduleData} />\n                        <InsertGame />\n                    </div>\n                </div>\n        </div>\n    );\n}\n\n\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const teams = state.firestore.data.teams;\n    let team;\n\n    if (teams) {\n        team = teams[id];\n    }\n\n    return {\n        loading: state.firestore.status.requesting.teams,\n        team,\n        auth: state.firebase.auth\n    }\n}\nexport default compose(\n    withRouter,\n    connect(mapStateToProps),\n    firestoreConnect(props => {\n        return [\n            {\n                collection: \"users\",\n                doc: props.auth.uid,\n                subcollections: [\n                    { collection: \"teams\"}\n            ],\n                storeAs: 'teams',\n            }\n        ];\n    }),\n)(TeamDetails);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport {\n    Form,\n    Input,\n    Button\n} from 'antd';\n\nclass SignIn extends Component {\n\n    state = {\n        email: '',\n        password: ''\n\n    }\n\n    handleChange = (e, value) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n\n    render() {\n        const { authError, auth } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className='container'>\n                <Form id='form' onSubmit={this.handleSubmit}>\n                    <h5 className='grey-text text-darken-3'>Sign In</h5>\n                    <Form.Item label=\"E-mail\" htmlFor='E-mail'>\n                        <Input id='email' onChange={this.handleChange} />\n                    </Form.Item>\n                    <Form.Item label=\"Password\" htmlFor='Password'>\n                        <Input.Password id='password' onChange={this.handleChange} />\n                    </Form.Item>\n                    <Form.Item >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Sign In\n              </Button>\n                    </Form.Item>\n                    <div className='red-text center'>\n                        {authError ? <p>{authError}</p> : null}\n                    </div>\n                </Form>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions';\nimport 'antd/dist/antd.css';\nimport {\n  Form,\n  Input,\n  Button,\n  Select\n} from 'antd';\nconst { Option } = Select;\n\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    managerPlayer: ''\n\n  }\n\n  handleTextInputChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n\n    })\n  }\n  handleSelectInputChange = (value) => {\n    this.setState({\n      managerPlayer: value\n\n    })\n  }\n\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' />\n    return (\n      <div className=\"container\">\n        <Form id='form' onSubmit={this.handleSubmit}>\n        <h5 className='grey-text text-darken-3'>Sign Up</h5>\n          <Form.Item label=\"First Name\" htmlFor='firstName'>\n            <Input id='firstName' onChange={this.handleTextInputChange} />\n          </Form.Item>\n          <Form.Item label=\"Last Name\" htmlFor='lastName'>\n            <Input id='lastName' onChange={this.handleTextInputChange} />\n          </Form.Item>\n          <Form.Item label=\"E-mail\" htmlFor='email'>\n            <Input id='email' onChange={this.handleTextInputChange} />\n          </Form.Item>\n          <Form.Item label=\"Password\" htmlFor='password'>\n            <Input.Password id='password' onChange={this.handleTextInputChange} />\n          </Form.Item>\n          <Form.Item label=\"Manager or Player\" htmlFor='managerPlayer'>\n            <Select id='managerPlayer' onChange={this.handleSelectInputChange}>\n              <Option value=\"manager\">Manager</Option>\n              <Option value=\"player\">Player</Option>\n            </Select>,\n        </Form.Item>\n          <Form.Item >\n            <Button type=\"primary\" htmlType=\"submit\">\n              Register\n          </Button>\n          </Form.Item>\n          <div className='red-text center'>\n            {authError ? <p>{authError}</p> : null}\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createTeam } from '../../store/actions/teamsActions';\nimport { Redirect } from 'react-router-dom';\n\nimport 'antd/dist/antd.css';\nimport {\n    Form,\n    Input,\n    Button\n} from 'antd';\n\n\nclass RegisterTeam extends Component {\n\n    state = {\n        name: '',\n        sport: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createTeam(this.state)\n        this.props.history.push('/');\n    }\n\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div className='container'>\n            <Form id='form' onSubmit={this.handleSubmit}>\n                <h5 className='grey-text text-darken-3'>Team Registration</h5>\n                <Form.Item label=\"Team Name\" htmlFor='Team Name'>\n                    <Input id='name' onChange={this.handleChange} />\n                </Form.Item>\n                <Form.Item label=\"Sport\" htmlFor='Sport'>\n                    <Input id='sport' onChange={this.handleChange} />\n                </Form.Item>\n                <Form.Item >\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Create\n          </Button>\n                </Form.Item>\n            </Form>\n        </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createTeam: (team) => dispatch(createTeam(team))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterTeam);","import React from 'react';\nimport { Route, useHistory } from 'react-router-dom';\nimport { Spin } from 'antd';\nimport { connect } from 'react-redux';\n\n\n\nfunction SignedInRoute({ auth, component: Component, ...rest}) {\n\n    const history = useHistory();\n    const { isLoaded, uid } = auth;\n\n    if (isLoaded && !uid) {\n        history.push('/signin')\n    };\n\n  return <Route render={() => (isLoaded && uid ? <Component /> : <Spin />)} {...rest} />;\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    console.log(state);\n    console.log(ownProps);\n    return {\n        auth: state.firebase.auth,\n        ...ownProps\n    }\n}\n\nexport default connect(mapStateToProps)(SignedInRoute);\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar/navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport TeamDetails from './components/info/TeamDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport RegisterTeam from './components/info/RegisterTeam'\nimport SignedInRoute from './components/routes/SignedInRoute'\nimport './App.css';\n\n\n\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Navbar />\n          <Switch>\n            <SignedInRoute exact path='/' component={Dashboard} />\n            <SignedInRoute path='/team/:id' component={TeamDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/registerteam' component={RegisterTeam} />\n          </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login error')\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success')\n            return state;\n            default:\n                return state;\n    }\n}\n\nexport default authReducer;","const initState = {\n    teams: [\n        { id: 1, team: 'DJ Bloom and Evens DJ', date: '12/15', time: '7:00' },\n        { id: 2, team: 'DJ Bloom and Evens DJ', date: '12/22', time: '7:00' },\n        { id: 3, team: 'DJ Bloom and Evens DJ', date: '12/29', time: '7:00' },\n    ]\n};\n\nconst teamsReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_TEAM':\n            console.log('created team', action.team)\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log(\"Error creating project\", action.err)\n            return state;\n        case 'INSERT_PLAYER':\n            console.log(\"Player Added\", action.player)\n            return state;\n        case 'INSERT_PLAYER_ERROR':\n            console.log(\"Error adding player\", action.err)\n            return state;\n        case 'INSERT_GAME':\n            console.log(\"Game Added\", action.game)\n            return state;\n        case 'INSERT_GAME_ERROR':\n            console.log(\"Error adding game\", action.err)\n            return state;\n        default: \n    }\n    return state;\n}\n\nexport default teamsReducer;","import authReducer from './authReducer';\nimport teamReducer from './teamReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    team: teamReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAWZLTaqRJbG1x3ucCfReWupfLf6A7-yWg\",\n    authDomain: \"squad-master.firebaseapp.com\",\n    databaseURL: \"https://squad-master.firebaseio.com\",\n    projectId: \"squad-master\",\n    storageBucket: \"squad-master.appspot.com\",\n    messagingSenderId: \"57789234759\",\n    appId: \"1:57789234759:web:b38125d77215e1ec76bb62\",\n    measurementId: \"G-N84C4DBL2X\"\n};\n\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { getFirebase, ReactReduxFirebaseProvider } from 'react-redux-firebase';\n\nimport firebase from 'firebase';\nimport fbConfig from './config/fbConfig';\n\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\n\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n  attachAuthIsReady: true\n};\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}