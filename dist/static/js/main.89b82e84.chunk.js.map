{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar/navbar.js","components/info/TeamSummary.js","components/info/Teams.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","store/actions/teamsActions.js","components/auth/InsertPlayer.js","components/auth/InsertGame.js","components/auth/DeletePlayer.js","components/info/RosterTable.js","components/info/ScheduleTable.js","components/info/TeamDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/info/RegisterTeam.js","components/routes/SignedInRoute.js","components/info/GameDetails.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/teamReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","Component","state","firebase","links","uid","id","src","isLoaded","TeamSummary","team","name","managerFirstName","managerLastName","sport","Teams","teams","map","key","Results","notifications","item","user","content","moment","time","toDate","fromNow","Dashboard","this","Notifications","compose","firestore","ordered","firestoreConnect","collection","doc","subcollections","teamId","storeAs","orderBy","limit","createTeam","getFirestore","managerId","add","firstName","lastName","createdAt","Date","catch","err","InsertPlayer","visible","playerFirstName","playerLastName","playerDues","showModal","setState","handleOk","e","handleCancel","handleChange","target","value","handleSubmit","preventDefault","insertPlayer","match","params","title","onOk","onCancel","onSubmit","Item","label","htmlFor","placeholder","onChange","htmlType","withRouter","player","addedBy","playerId","addedAt","console","log","InsertGame","date","opponent","handleTextInputChange","insertGame","handleDateInputChange","valueOfInput","format","handleTimeInputChange","selected","defaultOpenValue","game","DeletePlayer","handleClick","deletePlayer","ownProps","delete","rosterColumns","dataIndex","loading","status","requesting","data","schedule","roster","rosters","schedules","rosterData","push","dues","action","columns","dataSource","scheduleColumns","scheduleData","SignIn","email","password","signIn","authError","Password","creds","credentials","signInWithEmailAndPassword","Option","Select","SignUp","managerPlayer","handleSelectInputChange","signUp","newUser","createUserWithEmailAndPassword","resp","set","RegisterTeam","history","component","rest","useHistory","render","size","header","bordered","renderItem","App","exact","path","TeamDetails","GameDetails","Boolean","window","location","hostname","initState","authReducer","message","teamsReducer","rootReducer","combineReducers","teamReducer","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89b82e84.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\n\nconst SignedInLinks = (props) => {\n        return (\n            <ul className='right'>\n                <li><NavLink to='/registerteam'>Register a Team</NavLink></li>\n                <li><a onClick={props.signOut}>Log Out</a></li>\n                <li><NavLink to='/' className=\"btn btn-floating orange darken-3\">{props.profile.initials}</NavLink></li>\n            </ul>\n        );\n    }\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' })\n\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err })\n        })\n    }\n\n}\n\nexport const signOut = () => {\n    return(dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({type: 'SIGNOUT_SUCCESS'})\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0],\n                managerPlayer: newUser.managerPlayer\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n\n\n\n}","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\n\n\nclass SignedOutLinks extends Component {\n    render() {\n        return (\n            <ul className='right'>\n                <li><NavLink to='/signup'>Register</NavLink></li>\n                <li><NavLink to='/signin'>Sign In</NavLink></li>\n            </ul>\n\n\n        );\n    }\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from '../SignedInLinks'\nimport SignedOutLinks from '../SignedOutLinks'\nimport { connect } from 'react-redux';\n\n\n\nconst Navbar = (props) => {\n  const { auth, profile } = props \n\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\n\n  return (\n    <nav id='nav' className=\"nav-wrapper\">\n      <div className=\"container\">\n        <Link to='/' className='brand-logo'><img id='logo' className='responsive-img'src={'images/logo.png'}/></Link>\n        { auth.isLoaded && links }\n      </div>\n    </nav>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\n\n\nconst TeamSummary =({team}) => {\n\n        return (\n\n                <div className=\"card z-depth-0 project-summary\" id=\"card\">\n                    <div className='card-content grey-text text-darken-3'>\n                        <span id='summaryHeader' className=\"orange-text card-title center\">{team.name}</span>\n                        <hr></hr>\n                        <p className=\"grey-text center\">Team Manager : {team.managerFirstName}  {team.managerLastName}</p>\n                        <p className=\"grey-text center\">Sport : {team.sport}</p>\n                    </div>\n                </div>\n            \n        );\n    }\nexport default TeamSummary;","import React from 'react';\nimport TeamSummary from './TeamSummary';\nimport { Link } from 'react-router-dom';\n\n\nconst Teams = ({ teams }) => {\n\n\n    return (\n        <div className=\"team-list section\">\n             {teams && teams.map(team => {\n                return (\n                    <Link to={'/team/' + team.id}>\n                    <TeamSummary team={team} key={team.id} />\n                    </Link>\n                    \n                )\n            })\n            }\n        </div>\n    );\n}\nexport default Teams;","import React from 'react';\nimport moment from 'moment';\n\n\n\n\nconst Results = (props) => {\n  const {notifications} = props;\n  return (\n      <div className=\"section container\">\n          <div className=\"card z-depth-0 project-summary\" id=\"notiCard\">\n              <div className='card-content'>\n                <ul className='notifications'>\n                  { notifications && notifications.map(item => {\n                    return (\n                      <li id='notiList' key={item.id}>\n                        <span className=\"orange-text\">{item.user} </span>\n                        <span>{item.content}</span>\n                        <div className='grey-text'>\n                          {moment(item.time.toDate()).fromNow()}\n                        </div>\n                      </li>\n                    )\n                  })}\n                </ul>\n              </div>\n          </div>\n      </div>\n    \n  );\n}\n\nexport default Results;","import React, { Component } from 'react';\nimport Teams from '../info/Teams'\nimport { connect } from 'react-redux';\nimport Notifications from './Notifications';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\n\n\nclass Dashboard extends Component {\n    render() {\n        const { teams, auth, notifications } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div className='dashboard container'>\n                <div className='row'>\n                    <div className=\"col s12 m6\">\n                        <h5 id='dashboardHeader'>My Teams</h5>\n                        <p id='dashboardSubHeader'>(Click Team Card to see Team Details)</p>\n                        <Teams teams={teams} />\n                    </div>\n                    <div className='col s12 m5 offset-m1'>\n                        <h5 id='dashboardHeader'>Notifications</h5>\n                        <Notifications notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        teams: state.firestore.ordered.teams,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect(props => {\n        return [\n            {\n                collection: \"users\",\n                doc: props.auth.uid,\n                subcollections: [\n                    {\n                        collection: \"teams\",\n                        doc: props.teamId,\n                    }\n                ],\n                storeAs: 'teams',\n                orderBy: ['createdAt', 'desc']\n            },\n            { collection: 'notifications', limit: 3, storeAs: 'notifications', orderBy: ['time', 'desc']}\n        ];\n    })\n)(Dashboard);","export const createTeam = (team) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const managerId = getState().firebase.auth.uid;\n        firestore.collection('/users/' + managerId + '/teams/').add({\n            ...team,\n            managerFirstName: profile.firstName,\n            managerLastName: profile.lastName,\n            managerId: managerId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_TEAM', team })\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err })\n        })\n\n    }\n}\n\nexport const insertPlayer = (player, teamId) => {\n\n    const { playerFirstName, playerLastName, playerDues } = player\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore();\n        const managerId = getState().firebase.auth.uid;\n        firestore.collection('/users/' + managerId + '/teams/' + teamId + '/roster/').add({\n            playerFirstName, playerLastName, playerDues,\n            addedBy: managerId,\n            playerId: playerFirstName + playerLastName,\n            addedAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'INSERT_PLAYER', player: { playerFirstName, playerLastName, playerDues } })\n        }).catch((err) => {\n            dispatch({ type: 'INSERT_PLAYER_ERROR', err })\n        })\n    }\n\n}\n\nexport const insertGame = (game, teamId) => {\n\n    const { time, date, opponent } = game\n\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore();\n        const managerId = getState().firebase.auth.uid;\n        firestore.collection('/users/' + managerId + '/teams/' + teamId + '/schedule/').add({\n            date, opponent, time,\n            addedBy: managerId,\n            addedAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'INSERT_GAME', game: { date, opponent } })\n        }).catch((err) => {\n            dispatch({ type: 'INSERT_GAME_ERROR', err })\n        })\n    }\n\n}\n\nexport const deletePlayer = (playerId, teamId) => {\n\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore();\n        const managerId = getState().firebase.auth.uid;\n        firestore.collection('/users/' + managerId + '/teams/' + teamId + '/roster/').doc(playerId).delete(\n\n        ).then(() => {\n            dispatch({ type: 'DELETE_PLAYER', player: playerId })\n        }).catch((err) => {\n            dispatch({ type: 'DELETE_PLAYER_ERROR', err })\n        })\n    }\n\n}\n\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport { Modal, Button, Form, Input } from 'antd';\nimport { insertPlayer } from '../../store/actions/teamsActions';\nimport { connect } from 'react-redux';\nimport { compose } from '../../../../../../Library/Caches/typescript/3.6/node_modules/redux';\nclass InsertPlayer extends Component {\n\n\n    state = {\n        visible: false,\n        playerFirstName: '',\n        playerLastName: '',\n        playerDues: ''\n    };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.insertPlayer(\n            this.state, this.props.match.params.id\n\n\n\n        )\n        this.setState({\n            visible: false\n        })\n        \n    }\n\n    render() {\n        return (\n            <div>\n                <Button id='button' type=\"primary\" onClick={this.showModal}>\n                    Add a Player\n        </Button>\n                <Modal\n                    title=\"Add a Player\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <Form id='form' onSubmit={this.handleSubmit}>\n                        <h5 className='grey-text text-darken-3'>Player Details</h5>\n                        <Form.Item label=\"Player First Name\" htmlFor='Player First Name'>\n                            <Input id='playerFirstName' placeholder=\"John\" onChange={this.handleChange} />\n                        </Form.Item>\n                        <Form.Item label=\"Player Last Name\" htmlFor='Player Last Name'>\n                            <Input id='playerLastName' placeholder=\"Smith\" onChange={this.handleChange} />\n                        </Form.Item>\n                        <Form.Item label=\"Player Dues ($)\" htmlFor='Player Dues'>\n                            <Input id='playerDues' placeholder=\"100\" onChange={this.handleChange} />\n                        </Form.Item>\n                        <Form.Item >\n                            <Button  type=\"primary\" htmlType=\"submit\">\n                                Add Player\n          </Button >\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        insertPlayer: (player, teamId) => dispatch(insertPlayer(player, teamId))\n    }\n}\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps))(InsertPlayer);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport { Modal, Button, Form, Input } from 'antd';\nimport { DatePicker } from 'antd';\nimport { insertGame } from '../../store/actions/teamsActions';\nimport { connect } from 'react-redux';\nimport { compose } from '../../../../../../Library/Caches/typescript/3.6/node_modules/redux';\nimport { TimePicker } from 'antd';\nimport moment from 'moment';\nconst dateFormat = 'YYYY/MM/DD';\n\n\nfunction onOk(value) {\n  console.log('onOk: ', value);\n}\n\nclass InsertGame extends Component {\n  state = { \n    visible: false,\n    date: '',\n    time: '',\n    opponent: ''\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = e => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  handleCancel = e => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  handleTextInputChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n        this.props.insertGame(\n            this.state, this.props.match.params.id\n                \n                \n            \n        )\n    this.setState({\n      visible: false\n    })\n  }\n\n  handleDateInputChange = (date) => {\n    const valueOfInput = date.format(\"YYYY/MM/DD\");\n    this.setState({\n      date: valueOfInput\n\n    })\n  }\n\n  handleTimeInputChange = (time) => {\n    const valueOfInput = time.format(\"HH:mm\");\n    this.setState({\n      time: valueOfInput\n\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Button id='button' type=\"primary\" onClick={this.showModal}>\n          Add a Game\n        </Button>\n        <Modal\n          title=\"Add a Game\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n        >\n          <Form id='form' onSubmit={this.handleSubmit}>\n            <DatePicker id='date' format={dateFormat} selected={this.state.date} placeholder=\"Select Day\" onChange={this.handleDateInputChange} onOk={onOk} />\n            <TimePicker id='time' defaultOpenValue={moment('00:00', 'HH:mm')} selected={this.state.time} onChange={this.handleTimeInputChange}/>,\n            <Form.Item label=\"Opponent\" htmlFor='Opponent'>\n              <Input id='opponent' onChange={this.handleTextInputChange} placeholder=\"Opponent Team Name\" />\n            </Form.Item>\n            <Button id ='button' type=\"primary\" htmlType=\"submit\">\n              Add Game\n          </Button>\n          </Form>\n        </Modal>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      insertGame: (game, teamId) => dispatch(insertGame(game, teamId))\n  }\n}\nexport default compose(\n  withRouter, \n  connect(mapStateToProps, mapDispatchToProps))(InsertGame);","import React, { Component } from 'react'\nimport { deletePlayer } from '../../store/actions/teamsActions';\nimport { connect } from 'react-redux';\nimport { compose } from '../../../../../../Library/Caches/typescript/3.6/node_modules/redux';\nimport { withRouter } from 'react-router-dom';\n\n\n\nclass DeletePlayer extends Component {\n\n    handleClick = (e) => {\n        e.preventDefault();\n        this.props.deletePlayer(\n            this.props.playerId, \n            this.props.teamId\n    \n    \n        )\n    }\n\n\n    render() {\n        return (\n            <div>\n                <span\n                  onClick={this.handleClick} \n                >\n                  <a>Delete</a>\n                  </span>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        auth: state.firebase.auth,\n        playerId: ownProps.playerId,\n        teamId: ownProps.teamId\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deletePlayer: (playerId, teamId) => dispatch(deletePlayer(playerId, teamId))\n    }\n}\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps))(DeletePlayer);\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { Skeleton } from 'antd';\nimport { Table } from 'antd';\nimport DeletePlayer from '../auth/DeletePlayer'\nconst rosterColumns = [\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key:'name'\n\n    },\n    {\n        title: 'Dues',\n        dataIndex: 'dues',\n        key:'dues'\n    },\n    {\n        title: 'Action',\n        dataIndex: 'action',\n        key:'action'\n    }\n];\n\n\n\nconst RosterTable = (props) => {\n    const { team, loading } = props;\n    let rosters = props.roster;\n    let schedules = props.schedule;\n    if (loading || !team || !rosters || !schedules) {\n        return <Skeleton />\n    }\n\n    const rosterData = [];\n\n    rosters.map(player => {\n        rosterData.push({\n\n            name: player.playerFirstName + ' ' + player.playerLastName,\n            dues: player.playerDues + '$',\n            action: <DeletePlayer teamId={props.match.params.id} player={player} playerId={player.id}/>\n\n        })\n\n    })\n    return (\n        <Table columns={rosterColumns} dataSource={rosterData} />\n    );\n}\n\n\n\n\n\n\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        loading: state.firestore.status.requesting.team,\n        team: state.firestore.data.team,\n        schedule: state.firestore.ordered.schedule,\n        roster: state.firestore.ordered.roster,\n        auth: state.firebase.auth,\n        teamId: ownProps.match.params.id,\n    };\n}\n\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps),\n    firestoreConnect(props => {\n        return [\n            {\n                collection: \"users\",\n                doc: props.auth.uid,\n                subcollections: [\n                    {\n                        collection: \"teams\",\n                        doc: props.teamId,\n                    }\n                ],\n                storeAs: 'team',\n            },\n            {\n                collection: \"users\",\n                doc: props.auth.uid,\n                subcollections: [\n                    {\n                        collection: \"teams\",\n                        doc: props.teamId,\n                        subcollections: [\n                            { collection: \"roster\" }\n                        ]\n                    }\n\n                ],\n                storeAs: 'roster',\n                orderBy: ['playerDues', 'desc']\n            },\n            {\n                collection: \"users\",\n                doc: props.auth.uid,\n                subcollections: [\n                    {\n                        collection: \"teams\",\n                        doc: props.teamId,\n                        subcollections: [\n                            { collection: \"schedule\" }\n                        ]\n                    }\n\n                ],\n                storeAs: 'schedule',\n                orderBy: ['date', 'desc']\n            }\n        ];\n    }),\n)(RosterTable);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { Skeleton } from 'antd';\nimport { Table } from 'antd';\nimport { Link } from 'react-router-dom';\n\nconst scheduleColumns = [\n\n    {\n        title: 'Date',\n        dataIndex: 'date',\n        key: 'date'\n\n    },\n    {\n        title: 'Time',\n        dataIndex: 'time',\n        key: 'time'\n\n    },\n    {\n        title: 'Opponent',\n        dataIndex: 'opponent',\n        key: 'opponent'\n    },\n    {\n        title: 'Action',\n        dataIndex: 'action',\n        key: 'action'\n    }\n];\n\n\n\n\nconst ScheduleTable = (props) => {\n    const { team, loading } = props;\n    let rosters = props.roster;\n    let schedules = props.schedule;\n    if (loading || !team || !rosters || !schedules) {\n        return <Skeleton />\n\n    }\n\n    const scheduleData = [];\n\n    schedules.map(game => {\n        scheduleData.push({\n\n            date: game.date,\n            time: game.time,\n            opponent: game.opponent,\n            action: <Link to={'/game/' + game.id}>Check In</Link>\n\n        })\n\n    })\n    return (\n        <Table columns={scheduleColumns} dataSource={scheduleData} />\n    );\n}\n\n\n\n\n\n\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        loading: state.firestore.status.requesting.team,\n        team: state.firestore.data.team,\n        schedule: state.firestore.ordered.schedule,\n        roster: state.firestore.ordered.roster,\n        auth: state.firebase.auth,\n        teamId: ownProps.match.params.id,\n    };\n}\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps),\n    firestoreConnect(props => {\n        return [\n            {\n                collection: \"users\",\n                doc: props.auth.uid,\n                subcollections: [\n                    {\n                        collection: \"teams\",\n                        doc: props.teamId,\n                    }\n                ],\n                storeAs: 'team',\n            },\n            {\n                collection: \"users\",\n                doc: props.auth.uid,\n                subcollections: [\n                    {\n                        collection: \"teams\",\n                        doc: props.teamId,\n                        subcollections: [\n                            { collection: \"roster\", orderBy: ['playerFirstName', 'asc'] }\n                        ]\n                    }\n\n                ],\n                storeAs: 'roster',\n            },\n            {\n                collection: \"users\",\n                doc: props.auth.uid,\n                subcollections: [\n                    {\n                        collection: \"teams\",\n                        doc: props.teamId,\n                        subcollections: [\n                            { collection: \"schedule\", orderBy: ['date', 'asc'] }\n                        ]\n                    }\n\n                ],\n                storeAs: 'schedule',\n            }\n        ];\n    }),\n)(ScheduleTable);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { Skeleton } from 'antd';\nimport InsertPlayer from '../../components/auth/InsertPlayer';\nimport InsertGame from '../../components/auth/InsertGame';\nimport RosterTable from './RosterTable';\nimport ScheduleTable from './ScheduleTable';\n\n\n\nconst TeamDetails = (props) => {\n    const { team, loading } = props;\n    let rosters = props.roster;\n    let schedules = props.schedule;\n    if (loading || !team || !rosters || !schedules) {\n        return <Skeleton />\n    }\n\n\n\n\n\n    return (\n        <div className='container section game-details'>\n            <div className='card z-depth-0'>\n                <div className='card-content'>\n                    <span id=\"dashboardHeader\" className='card-title center'>{team.name}</span>\n                    <p className=\"center\">Manager : {team.managerFirstName}  {team.managerLastName}</p>\n                </div>\n                <div className=\"card-action grey-lighten-4 grey-text\">\n                </div>\n            </div>\n            <div className='row'>\n                <div className=\"col s12 m5\">\n                    <h5 id=\"dashboardHeader\" className='center'>Roster</h5>\n                    <RosterTable />\n                    <InsertPlayer />\n                </div>\n                <div className='col s12 m7'>\n                    <h5 id=\"dashboardHeader\" className='center'>Schedule</h5>\n                    <ScheduleTable />\n                    <InsertGame />\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        loading: state.firestore.status.requesting.team,\n        team: state.firestore.data.team,\n        schedule: state.firestore.ordered.schedule,\n        roster: state.firestore.ordered.roster,\n        auth: state.firebase.auth,\n        teamId: ownProps.match.params.id,\n    };\n}\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps),\n    firestoreConnect(props => {\n        return [\n            {\n                collection: \"users\",\n                doc: props.auth.uid,\n                subcollections: [\n                    {\n                        collection: \"teams\",\n                        doc: props.teamId,\n                    }\n                ],\n                storeAs: 'team',\n            },\n            {\n                collection: \"users\",\n                doc: props.auth.uid,\n                subcollections: [\n                    {\n                        collection: \"teams\",\n                        doc: props.teamId,\n                        subcollections: [\n                            { collection: \"roster\" }\n                        ]\n                    }\n\n                ],\n                storeAs: 'roster',\n                orderBy: ['playerFirstName', 'asc']\n            },\n            {\n                collection: \"users\",\n                doc: props.auth.uid,\n                subcollections: [\n                    {\n                        collection: \"teams\",\n                        doc: props.teamId,\n                        subcollections: [\n                            { collection: \"schedule\" }\n                        ]\n                    }\n\n                ],\n                storeAs: 'schedule',\n                orderBy: ['date', 'asc']\n            }\n        ];\n    }),\n)(TeamDetails);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport {\n    Form,\n    Input,\n    Button\n} from 'antd';\n\nclass SignIn extends Component {\n\n    state = {\n        email: '',\n        password: ''\n\n    }\n\n    handleChange = (e, value) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n\n    render() {\n        const { authError, auth } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className='container'>\n                <Form id='form' onSubmit={this.handleSubmit}>\n                    <h5 className='grey-text text-darken-3'>Sign In</h5>\n                    <Form.Item label=\"E-mail\" htmlFor='E-mail'>\n                        <Input id='email' onChange={this.handleChange} />\n                    </Form.Item>\n                    <Form.Item label=\"Password\" htmlFor='Password'>\n                        <Input.Password id='password' onChange={this.handleChange} />\n                    </Form.Item>\n                    <Form.Item >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Sign In\n              </Button>\n                    </Form.Item>\n                    <div className='red-text center'>\n                        {authError ? <p>{authError}</p> : null}\n                    </div>\n                </Form>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions';\nimport 'antd/dist/antd.css';\nimport {\n  Form,\n  Input,\n  Button,\n  Select\n} from 'antd';\nconst { Option } = Select;\n\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    managerPlayer: ''\n\n  }\n\n  handleTextInputChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n\n    })\n  }\n  handleSelectInputChange = (value) => {\n    this.setState({\n      managerPlayer: value\n\n    })\n  }\n\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' />\n    return (\n      <div className=\"container\">\n        <Form id='form' onSubmit={this.handleSubmit}>\n        <h5 className='grey-text text-darken-3'>Sign Up</h5>\n          <Form.Item label=\"First Name\" htmlFor='firstName'>\n            <Input id='firstName' onChange={this.handleTextInputChange} />\n          </Form.Item>\n          <Form.Item label=\"Last Name\" htmlFor='lastName'>\n            <Input id='lastName' onChange={this.handleTextInputChange} />\n          </Form.Item>\n          <Form.Item label=\"E-mail\" htmlFor='email'>\n            <Input id='email' onChange={this.handleTextInputChange} />\n          </Form.Item>\n          <Form.Item label=\"Password\" htmlFor='password'>\n            <Input.Password id='password' onChange={this.handleTextInputChange} />\n          </Form.Item>\n          <Form.Item label=\"Manager or Player\" htmlFor='managerPlayer'>\n            <Select id='managerPlayer' onChange={this.handleSelectInputChange}>\n              <Option value=\"manager\">Manager</Option>\n              <Option value=\"player\">Player</Option>\n            </Select>,\n        </Form.Item>\n          <Form.Item >\n            <Button type=\"primary\" htmlType=\"submit\">\n              Register\n          </Button>\n          </Form.Item>\n          <div className='red-text center'>\n            {authError ? <p>{authError}</p> : null}\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createTeam } from '../../store/actions/teamsActions';\nimport { Redirect } from 'react-router-dom';\n\nimport 'antd/dist/antd.css';\nimport {\n    Form,\n    Input,\n    Button\n} from 'antd';\n\n\nclass RegisterTeam extends Component {\n\n    state = {\n        name: '',\n        sport: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createTeam(this.state)\n        this.props.history.push('/');\n    }\n\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div className='container'>\n            <Form id='form' onSubmit={this.handleSubmit}>\n                <h5 className='grey-text text-darken-3'>Team Registration</h5>\n                <Form.Item label=\"Team Name\" htmlFor='Team Name'>\n                    <Input id='name' onChange={this.handleChange} />\n                </Form.Item>\n                <Form.Item label=\"Sport\" htmlFor='Sport'>\n                    <Input id='sport' onChange={this.handleChange} />\n                </Form.Item>\n                <Form.Item >\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Create\n          </Button>\n                </Form.Item>\n            </Form>\n        </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createTeam: (team) => dispatch(createTeam(team))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterTeam);","import React from 'react';\nimport { Route, useHistory } from 'react-router-dom';\nimport { Skeleton } from 'antd';\nimport { connect } from 'react-redux';\n\n\n\nfunction SignedInRoute({ auth, component: Component, ...rest}) {\n\n    const history = useHistory();\n    const { isLoaded, uid } = auth;\n\n    if (isLoaded && !uid) {\n        history.push('/signin')\n    };\n\n  return <Route render={() => (isLoaded && uid ? <Component /> : <Skeleton />)} {...rest} />;\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        auth: state.firebase.auth,\n        ...ownProps\n    }\n}\n\nexport default connect(mapStateToProps)(SignedInRoute);\n","import React from 'react'\nimport { List } from 'antd';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport 'antd/dist/antd.css';\n\nconst data = [\n    \n];\n\n\nconst GameDetails = (state, props) => {\n    console.log(state)\n    console.log(props)\n        return (\n            <div className='container section'>\n                <div className='card z-depth-0'>\n                    <div className='card-content'>\n                        <span className='card-title center'>Check In Page</span>\n                        <p className=\"center\">Coming Soon ...</p>\n                    </div>\n                    <div className=\"card-action grey-lighten-4 grey-text\">\n                        <List\n                            size=\"small\"\n                            header={<div className=\"center\">Checked In Players</div>}\n                            bordered\n                            dataSource={data}\n                            renderItem={item => <List.Item>{item}</List.Item>}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\nconst mapStateToProps = (state, props) => {\n    return {\n        auth: state.firebase.auth,\n        teamId: props.match.params.id,\n    };\n}\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps),\n    firestoreConnect(props => {\n        return [\n            {\n                collection: \"users\",\n                doc: props.auth.uid,\n                subcollections: [\n                    {\n                        collection: \"teams\",\n                        doc: props.teamId,\n                    }\n                ],\n                storeAs: 'team',\n            },\n            {\n                collection: \"users\",\n                doc: props.auth.uid,\n                subcollections: [\n                    {\n                        collection: \"teams\",\n                        doc: props.teamId,\n                        subcollections: [\n                            { collection: \"schedule\" }\n                        ]\n                    }\n\n                ],\n                storeAs: 'schedule',\n            }\n        ];\n    }),\n)(GameDetails);\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar/navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport TeamDetails from './components/info/TeamDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport RegisterTeam from './components/info/RegisterTeam'\nimport SignedInRoute from './components/routes/SignedInRoute'\nimport './App.css';\nimport GameDetails from './components/info/GameDetails';\n\n\n\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div id='content'>\n          <Navbar />\n          <Switch>\n            <SignedInRoute exact path='/' component={Dashboard} />\n            <SignedInRoute path='/team/:id' component={TeamDetails} />\n            <SignedInRoute path='/game/:id' component={GameDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/registerteam' component={RegisterTeam} />\n          </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login error')\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success')\n            return state;\n            default:\n                return state;\n    }\n}\n\nexport default authReducer;","const initState = {\n    teams: [\n        { id: 1, team: 'DJ Bloom and Evens DJ', date: '12/15', time: '7:00' },\n        { id: 2, team: 'DJ Bloom and Evens DJ', date: '12/22', time: '7:00' },\n        { id: 3, team: 'DJ Bloom and Evens DJ', date: '12/29', time: '7:00' },\n    ]\n};\n\nconst teamsReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_TEAM':\n            console.log('created team', action.team)\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log(\"Error creating project\", action.err)\n            return state;\n        case 'INSERT_PLAYER':\n            console.log(\"Player Added\", action.player)\n            return state;\n        case 'INSERT_PLAYER_ERROR':\n            console.log(\"Error adding player\", action.err)\n            return state;\n        case 'INSERT_GAME':\n            console.log(\"Game Added\", action.game)\n            return state;\n        case 'INSERT_GAME_ERROR':\n            console.log(\"Error adding game\", action.err)\n            return state;\n        case 'DELETE_PLAYER':\n            console.log(\"Deleted player\", action.playerId)\n            return state;\n        case 'DELETE_PLAYER_ERROR':\n            console.log(\"Delete player error\", action.err)\n            return state;\n        default:\n    }\n    return state;\n}\n\nexport default teamsReducer;","import authReducer from './authReducer';\nimport teamReducer from './teamReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    team: teamReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAWZLTaqRJbG1x3ucCfReWupfLf6A7-yWg\",\n    authDomain: \"squad-master.firebaseapp.com\",\n    databaseURL: \"https://squad-master.firebaseio.com\",\n    projectId: \"squad-master\",\n    storageBucket: \"squad-master.appspot.com\",\n    messagingSenderId: \"57789234759\",\n    appId: \"1:57789234759:web:b38125d77215e1ec76bb62\",\n    measurementId: \"G-N84C4DBL2X\"\n};\n\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { getFirebase, ReactReduxFirebaseProvider } from 'react-redux-firebase';\nimport firebase from 'firebase';\nimport fbConfig from './config/fbConfig';\n\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\n\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n  attachAuthIsReady: true\n};\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}